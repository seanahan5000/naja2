
MEDIC_CHAR		=	ISOURCE_CHAR

SLINUM			=	$00
DLINUM			=	$01
SCOLUMN			=	$02
DCOLUMN			=	$03
HENDLINE		=	$11
HPOINT			=	$15
COLHOLD			=	$17
PULSE			=	$19
BREATH			=	$1A
PDELAY			=	$1B
RDELAY			=	$1C
GDELAY			=	$1D

DIAGNOSE_MOD	DB	modDiagnose

DIAGNOSER		STA	DEATH_FLAG

				LDA	ITARGET_CHAR
				JSR	SET_CHAR

				LDA #8
				JSR SET_TEXT_HEIGHT

				JSR DRAW_PICT
				PictSetPage1
				PictClearPage
				PictSetGreen
				PictRect $01;$00;279;$4A
				PictMoveTo $8B;$01
				PictLineTo $8B;$49
				PictRect $01;$4D;279;$BF
				PictMoveTo $B1;$4E
				PictLineTo $B1;$BE
				PictImage THERMOMETER
				PictImage WAVES
				PictImage BODY
				PictTextAt 20;175;(BODY)
				PictTextAt 20;183;(TEMP)
				PictTextAt 75;175;(BRAIN)
				PictTextAt 66;183;(ACTIVITY)
				PictTextAt 121;179;(CONDITION)
				PictTextAt 214;150;(PULSE)
				PictTextAt 195;183;(RESPIRATION)
				PictTextAt 5;2;(PATIENT:)
				; TODO: align and use TextLineBreak
				PictTextAt 11;10;(__PROF:)
				PictTextAt 11;18;(__RACE:)
				PictTextAt 11;26;(HEALTH:)
				PictTextAt 11;34;(ENERGY:)
				PictTextAt 11;42;(STATUS:)
				PictTextAt 47;50;(:)
				PictTextAt 5;58;(PHYSICN:)
				PictTextAt 11;66;(ENERGY:)
				PictCall STATTER
				PictShowPage
				PictEnd

				; order dependent
				JSR	BUILD_HEARTS
				JSR	BUILD_BOXES

				LDA	#$40
				STA	RDELAY
				LDA	#$08
				STA	GDELAY
				JSR	BVALUER
				LDA	#$00
				STA	PULSE
				STA	BREATH
				JSR	BEAT1

				BIT	DEATH_FLAG
				BPL	:SKIPB
				JMP	SHOW_DEATH

:SKIPB			LDY	#status
				LDA	(CHARDL),Y
				AND	#%00111111
				BNE	NOT_NORMAL
				SEC
				JMP	GENERAL_HEAL

NOT_NORMAL		CMP	#dead
				BNE	NOT_DEAD

				JSR DRAW_PICT
				PictSetTextBox 146;11;278;44
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (_IS_DEAD_AND_BEYOND_HELP_HERE.)
				PictEnd
				JMP	HEAL_OUT

NOT_DEAD		JSR DRAW_PICT
				PictSetTextBox 146;11;278;44
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (_NEEDS_)
				PictEnd
				LDA	#$41			;Medical equipment
				STA	ETABLE+0
				LDA	#$00
				STA	ETABLE+2
				STA	ETABLE+3
				LDA	STATHOLD
				LSR
				TAY
				LDA	TREATMENTS-4,Y
				STA	ETABLE+1
				LDA	TREATMENTS-3,Y

				PHA
				LDX #<TREAT_STRINGS
				LDY #>TREAT_STRINGS
				JSR GET_IND_STRING
				JSR WRAP_TEXTBUF
				PLA
				BNE :SKIPA

				JSR	EQUIP1
				JSR WRAP_TEXTBUF
				JSR DRAW_PICT
				PictTextIn (.)
				PictEnd

:SKIPA			LDA	MEDIC_CHAR
				JSR	SET_CHAR

				JSR	SEARCH_FOR
				LDA	#0					; the equipment
				BCC	:SKIPB
				CLC
				JSR	ENERGY_FOR
				LDA	#1					; enough energy
				BCS	CAN_TREAT
:SKIPB			PHA

				JSR DRAW_PICT
				PictSetTextBox 146;39;278;64
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (_DOES_NOT_HAVE_)
				PictEnd

				PLA
				BNE :SKIPC

				JSR DRAW_PICT
				PictTextIn (THE_EQUIPMENT)
				PictEnd
				JMP :SKIPD

:SKIPC			JSR DRAW_PICT
				PictTextIn (ENOUGH_ENERGY)
				PictEnd

:SKIPD			JSR DRAW_PICT
				PictTextIn (_TO_GIVE_TREATMENT.)
				PictEnd

				JSR SPACE_TEXT
				JSR	MULTI_KEY
				JMP	HEAL_OTHER

CAN_TREAT		LDA	ITARGET_CHAR
				JSR	SET_CHAR

				JSR DRAW_PICT
				PictTextAt 161;39;(PRESS_<SPACE>_TO)
				PictTextAt 164;47;(GIVE_TREATMENT_)
				PictTextAt 188;55;(C>ANCEL)
				PictEnd

				LDA	#"C"
				STA	KEYMOD1+1
				JSR	MULTI_KEY
				LDX	#$00
				STX	KEYMOD1+1
				CMP	#"C"
				BEQ	HEAL_OTHER

				LDA	MEDIC_CHAR
				JSR	SET_CHAR
				LDX	FROM_WHERE
				JSR	REMOVE_ITEM
				SEC
				JSR	ENERGY_FOR
				LDA	ITARGET_CHAR
				JSR	SET_CHAR

				LDY	#status
				LDA	(CHARDL),Y
				AND	#%11000000
				STA	(CHARDL),Y
				JSR	CALC_ALL
				JSR	BVALUER
				JSR	MULTI_WAIT

HEAL_OTHER		CLC
GENERAL_HEAL	ADC #0
				STA :ALSO_ONLY_MOD+1

				LDY	#damagelev
				LDA	(CHARDL),Y
				INY
				ORA	(CHARDL),Y
				STA	DFLAG
				BNE	:SKIPB
				LDY	#status
				LDA	(CHARDL),Y
				BMI	:SKIPB

				JSR DRAW_PICT
				PictSetTextBox 146;3;278;44
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (_IS_IN_PERFECT_HEALTH._NO_TREATMENT_IS_NEEDED.)
				PictEnd
				JMP	HEAL_OUT

:SKIPB			LDY	#status
				LDA	(CHARDL),Y
				AND	#critical
				BEQ	:SKIPC

				JSR DRAW_PICT
				PictSetTextBox 146;3;278;44
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (_IS_IN_CRITICAL_CONDITION_AND_DESPARATELY)
				PictEnd
				JMP :SKIPD

:SKIPC			JSR DRAW_PICT
				PictSetTextBox 146;19;278;44
				PictCall WRAP_TRIMMED_NAME
				PictEnd

:ALSO_ONLY_MOD	LDA #$FF
				BNE :ONLY

:ALSO			JSR DRAW_PICT
				PictTextIn (_ALSO)
				PictEnd
				JMP :SKIPD

:ONLY			JSR DRAW_PICT
				PictTextIn (_ONLY)
				PictEnd
:SKIPD
				JSR DRAW_PICT
				PictTextIn (_NEEDS_THE_FOLLOWING:\n)
				PictEnd

				LDA	DFLAG
				BEQ	:SKIPE

				JSR DRAW_PICT
				PictTextIn (___GENERAL_HEALING\n)
				PictEnd

				LDY	#status
				LDA	(CHARDL),Y
				BPL	HEAL_OUT

:SKIPE			JSR DRAW_PICT
				PictTextIn (___ENERGY_TRANSFER\n)
				PictEnd

HEAL_OUT		JSR SPACE_TEXT
				JSR	MULTI_KEY
HEAL_EXIT		LDA	MEDIC_CHAR
				STA	CURSOR
				JSR	SET_CHAR
				LDA #0
				JSR SET_TEXT_HEIGHT
				;*** FORCE REDRAWING ***
				RTS						; return back to C.ISTATS.S

SPACE_TEXT		JSR DRAW_PICT
				PictTextAt 233;65;(<SPACE>)
				PictEnd
				RTS

ROBOT_NAME		JSR WRAP_TRIMMED_NAME
				LDA ITARGET_CHAR
				JMP SET_CHAR

SHOW_DEATH		JSR	MULTI_WAIT
				JSR DRAW_PICT
				PictSetTextBox 146;11;278;44
				PictTextIn (THERE_IS_NOTHING_THAT_CAN_BE_DONE_TO_SAVE_)
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (_NOW.)
				PictEnd

				JSR SPACE_TEXT
				JSR	MULTI_KEY
***** SLOWING HEART UNTIL IT STOPS
				LDY	#status
				LDA	#dead
				STA	(CHARDL),Y
				JSR	BVALUER
				JSR	MULTI_WAIT

				JSR DRAW_PICT
				PictSetTextBox 146;11;278;44
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (_HAS_DIED.)
				PictEnd

				JSR	:SUBA

				JSR FIND_ROBOT
				BMI :SKIPA
				PHA

				LDA ITARGET_CHAR
				JSR SET_CHAR
				JSR DRAW_PICT
				PictSetTextBox 146;11;278;44
				PictTextIn (BECAUSE_OF_THE_DEATH_OF_)
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (,_THE_ROBOT,_)
				PictEnd

				PLA
				JSR SET_CHAR
				JSR DRAW_PICT
				PictCall WRAP_TRIMMED_NAME
				PictTextIn (,_IS_NOW_USELESS.)
				PictEnd

				JSR SET_BROKEN

:SKIPA			JMP	HEAL_EXIT

:SUBA			JSR SPACE_TEXT
				JSR	GET_SPACE_ENTER
				JMP	CLRBOX

DEATH_FLAG		DB	0
DFLAG			DB	0

SEARCH_FOR		LDA	ETABLE+1
				AND	#$0F
				CMP	#$09
				BNE	:SUBA
				LDA	ETABLE+1
				PHA
				LDA	#$08			;Drug Infusor
				STA	ETABLE+1
				JSR	:SUBA
				PLA
				STA	ETABLE+1
				BCC	:EXIT
				JSR	:SUBA
				STY	FROM_WHERE
:EXIT			RTS
:SUBA			JSR	RESET_EQLIST
				LDX	#<MAIN_SEARCH
				LDY	#>MAIN_SEARCH
				JMP	ESCAN_COMMON

FROM_WHERE		DB	0

MAIN_SEARCH		LDA	(CHARDL),Y
				CMP	#$41
				BNE	:EXIT
				INY
				LDA	(CHARDL),Y
				CMP	ETABLE+1
:EXIT			RTS

ENERGY_FOR		PHP
				JSR	ENERUSE
				PLP
				LDX	#<ENERGY_USAGE
				LDY	#>ENERGY_USAGE
				JMP	DRAINER_MAIN

MULTI			DEC	PDELAY
				BNE	:SKIPA
				JSR	BEAT1
:SKIPA			DEC	GDELAY
				BNE	:SKIPB
				JSR	GRAPH1
:SKIPB			DEC	RDELAY
				BNE	:SKIPC
				JSR	BREATH1
:SKIPC								;LDA OVERALL_SPEED
				LDA	#$1B			;TEMP****
				NOP					;TEMP****
				JMP	WAIT

OVERALL_SPEED	DB	0

MULTI_WAIT		JSR	MULTI
				LDX	#2
:LOOP1			LDA	NORMLEV,X
				CMP	YCURSOR,X
				BNE	MULTI_WAIT
				DEX
				BPL	:LOOP1
				RTS

MULTI_KEY		JSR	MULTI
				LDA	NORMLEV+1
				EOR	WIGGLE_FLAG
				STA	NORMLEV+1
				LDA	KEYBRD
				BPL	MULTI_KEY
				BIT	UNSTROB
				JSR	CHECK_ENTER
				BEQ	CLRBOX
KEYMOD1			CMP	#$00				; modified
				BNE	MULTI_KEY

				; fall through
CLRBOX			PHA
				JSR DRAW_PICT
				PictClear $14;$01;$28;$4A
				PictEnd
				PLA
				RTS

WIGGLE_FLAG		DB	$00

BEAT1			LDY	#status
				LDA	(CHARDL),Y
				CMP	#dead
				BEQ	CMOUT2
				LDA	#$00
				STA	HPOINT
				STA	ORNFLAG
				STA	COLHOLD
				LDA	#$03
				STA	UDLRMOD+1
				LDY	#profrace
				LDA	(CHARDL),Y
				AND	#$0F
				CMP	#stilicx
				BNE	NOSTIL
				LDX	#$20
				STX	HPOINT
NOSTIL			CMP	#orn
				BNE	NOORN
				DEC	ORNFLAG
NOORN			CMP	#xxtys
				BNE	NOXXYT
				SEC
				ROR	COLHOLD
NOXXYT			TAX
				BEQ	UDSUB
				DEX
				BEQ	TANDEM
				DEX
				BEQ	UDLRSUB
				DEX
				DEX
				BEQ	UDLRSUB
LRSUB			LDY	PULSE
				LDA	LRBEATS,Y
				BPL	LRUDCOM
UDSUB			LDY	PULSE
				LDA	UDBEATS,Y
				BPL	LRUDCOM
UDLRSUB			LDA	#$07
				STA	UDLRMOD+1
				BNE	UDSUB
TANDEM			LDY	PULSE
				LDA	UDBEATS,Y
				ORA	#$80
				JSR	HDRAW
				LDY	PULSE
				LDA	LRBEATS,Y
LRUDCOM			JSR	HDRAW
				LDA	PULSE
				INC	PULSE
UDLRMOD			CMP	#$03
				BNE	COMOUT
				LDA	#$00
				STA	PULSE
COMOUT			LDY	PULSE
				LDA	PRATES,Y
				STA	PDELAY
CMOUT2			RTS

ORNFLAG			DB	$00

PRATES			DB	$80,$80,$40
				DB	$40
				DB	$80,$80,$40
				DB	$40
UDBEATS			DB	$00,$01,$02
				DB	$01
LRBEATS			DB	$00,$03,$04
				DB	$03

HDRAW			STA	TEMP
				LDA	HPOINT
				STA	SLINUM
				CLC
				ADC	#$1A
				STA	SELMOD+1
				LDA	TEMP
				AND	#$7F
				ASL
				ASL
				STA	SCRATCH
				LSR
				CLC
				ADC	SCRATCH
				STA	SBCMOD+1
				CLC
				ADC	#$05
				STA	SECMOD+1
				LDA	#$64
				STA	DLINUM
				LDA	#$1E
				STA	DBCMOD+1
				LDA	ORNFLAG
				BEQ	DHLOOP1
				LDX	#$20
				LDY	#$74
				BIT	TEMP
				BPL	ORNCOM
				LDX	#$1B
				LDY	#$55
ORNCOM			STX	DBCMOD+1
				STY	DLINUM
DHLOOP1			LDX	SLINUM
				JSR SET_SOURCE_OFF
				LDX	DLINUM
				JSR SET_DEST_LINE
SBCMOD			LDA	#$FF
				STA	SCOLUMN
DBCMOD			LDA	#$FF
				STA	DCOLUMN
DHLOOP2			LDY	SCOLUMN
				LDA	(SCREENL),Y
				EOR	COLHOLD
				LDY	DCOLUMN
				STA	(DESTINL),Y
				INC	DCOLUMN
				LDA	SCOLUMN
				INC	SCOLUMN
SECMOD			CMP	#$FF
				BNE	DHLOOP2
				INC	DLINUM
				LDA	SLINUM
				INC	SLINUM
SELMOD			CMP	#$FF
				BNE	DHLOOP1
				RTS

; On exit:
;	Page is set to 2
BUILD_HEARTS 	JSR DRAW_PICT
				PictSetPage2
				PictClearPage
				PictImage OHEART
				PictImage BHEART
				PictEnd
				LDX	#$00
				JSR	:HEART_SUB
				LDX	#$20
				; fall through
:HEART_SUB		TXA
				CLC
				ADC	#$0D
				STA	HENDLINE
:LOOP1			STX	LINENUM
				JSR SET_SOURCE_LINE
				TXA
				AND	#$DF
				STA	SCRATCH
				LDA	HENDLINE
				CLC
				ADC	#$0D
				SEC
				SBC	SCRATCH
				TAX
				JSR SET_DEST_LINE
				LDY	#$1D
:LOOP2			LDA	(SCREENL),Y
				STA	(DESTINL),Y
				DEY
				BPL	:LOOP2
				LDX	LINENUM
				INX
				CPX	HENDLINE
				BNE	:LOOP1
				RTS
;
; On entry:
;	Page is set to 2
;
; On exit:
;	Page is set to 1
BUILD_BOXES		JSR DRAW_PICT
				PictCopyTo $03;$52;$18;$99
				PictSetViolet
				PictRect $08;$9A;$36;$AC
				PictRect $42;$9A;$70;$AC
				PictRect $7C;$9A;$AA;$AC
				PictCall WORDSUB3
				PictSwap $01;$99;$19;$AD
				PictSetPage1
				PictEnd
				RTS

WORDSUB3		LDX	#$02
:1				LDA	#$99
				STA	YCURSOR,X
				LDA	#$FF
				STA	TCURSOR,X
				DEX
				BPL	:1
				LDA	#$02
				STA	CURSOR
:2				JSR	WORDSUB
				DEC	CURSOR
				BPL	:2
				RTS

BREATH1			LDY	#status
				LDA	(CHARDL),Y
				CMP	#dead
				BEQ	:2
				LDX	BREATH
				LDA	BRETHX,X
				TAX
				LDY	#$AC
				JSR MOVE_TO
				LDX	#<BREATH_BOX
				LDY	#>BREATH_BOX
				JSR	DRAW_TILE
				LDX	BREATH
				LDA	BRATES,X
				STA	RDELAY
				INX
				CPX	#$0E
				BNE	:1
				LDX	#$00
:1				STX	BREATH
:2				RTS

BREATH_BOX		DB	%01010101
				DB	%01000001
				DB	%01000001
				DB	%01000001
				DB	%01000001
				DB	%01000001
				DB	%01010101

BRATES			DB	$40,$40,$40
				DB	$40,$40,$40
				DB	$D0,$38,$38
				DB	$38,$38,$38
				DB	$38,$FF

BRETHX			DB	$C2,$CC,$D6
				DB	$E0,$EA,$F4
				DB	$FE,$FE,$F4
				DB	$EA,$E0,$D6
				DB	$CC,$C2

GRAPH1			LDA	#$00
				STA	CURSOR
GRLOOP1			LDX	CURSOR
				LDA	NORMLEV,X
				CMP	YCURSOR,X
				BEQ	GRSKIP1
				BCS	GRSKIP2
				JSR	UP1
				JMP	GRSKIP1
GRSKIP2			JSR	DOWN1
GRSKIP1			INC	CURSOR
				LDA	CURSOR
				CMP	#$03
				BEQ	GROUTA
				JSR	RANDOM
				AND	#$03
				BEQ	GRSKIP1
				BNE	GRLOOP1
GROUTA			LDA	#$08
				STA	GDELAY
GROUT			RTS

UP1				LDY	CURSOR
				LDA	YCURSOR,Y
				CMP	#$4F
				BEQ	GROUT
				TAX
				CLC
				ADC	#$15
				STA	HENDLINE
				LDA	#$CA			;DEX OPCODE
				BNE	UDSUB0
DOWN1			LDY	CURSOR
				LDA	YCURSOR,Y
				CMP	#$99
				BEQ	GROUT
				STA	HENDLINE
				DEC	HENDLINE
				CLC
				ADC	#$14
				TAX
				LDA	#$E8			;INX OPCODE
UDSUB0			STA	UPDOWN1
				EOR	#$22
				STA	UPDOWN2
				STA	UPDOWN3
				AND	#$F0
				EOR	#$20
				ORA	#$1E
				STA	UPDOWN4
				LDA	BEGINS,Y
				STA	SCOLUMN
				LDA	ENDS,Y
				STA	DCOLUMN
UDLOOP0			JSR	SET_SOURCE_LINE
UPDOWN1			DEX
				JSR	SET_DEST_LINE
				JSR	UDSUB1
UPDOWN2			INX
UPDOWN3			INX
				CPX	HENDLINE
				BNE	UDLOOP0
				LDA	SCREENL
				STA	DESTINL
				LDA	SCREENH
				STA	DESTINH
				EOR	#$60
				STA	SCREENH
				JSR	UDSUB1
				LDX	CURSOR
UPDOWN4			DEC	YCURSOR,X
WORDSUB			LDY	CURSOR
				LDA	YCURSOR,Y
				LDX	#$00
FILOOP1			CMP	LEVEL,X
				BCS	FOUND
				INX
				BNE	FILOOP1
FOUND			TXA
				CLC
				ADC	TIMES5,Y
				CMP	TCURSOR,Y
				BNE	CHANG
				RTS

CHANG			PHA
				LDX	TCURSOR,Y
				BMI	WORD1
				JSR	BWORDER
WORD1			LDY	CURSOR
				PLA
				STA	TCURSOR,Y
				TAX
BWORDER			LDA	YCURSOR,Y
				STA YPNT
				LDA X_STARTS,Y
				STA :XMOD+1

				CPX #5
				BCC :NORMAL
				CPX #9
				BCS :NORMAL
				LDA SECONDS-5,X
				BEQ :NORMAL

				PHA
				LDA #3
				JSR :STAT_LINE1
				PLA
				BNE :STAT_LINE2			; always

:NORMAL			LDA #7
:STAT_LINE1		CLC
				ADC YPNT
				TAY
				JSR VMOVE_TO
				TXA
:STAT_LINE2		LDX #<STAT_STRINGS
				LDY #>STAT_STRINGS
				JSR GET_IND_STRING
:XMOD			LDA #$FF
:1				CPX #4
				BEQ :2
				SEC
				SBC #3
				DEX
				BNE :1
:2				TAX
				JSR HMOVE_TO
				JMP DRAW_TEXTBUF_RET

X_STARTS		DB	20,78,136
SECONDS			DB	15,16,0,16

STAT_STRINGS	USR	(COLD)=
				USR	(COOL)=
				USR	(NORMAL)=
				USR	(WARM)=
				USR	(FEVER)=

				USR	(BRAIN)=			; 5
				USR	(UNDER)=			; 6
				USR	(NORMAL)=
				USR	(OVER)=				; 8
				USR	(SEIZURE)=

				USR	(DEAD)=
				USR	(CRITICL)=
				USR	(POOR)=
				USR	(FAIR)=
				USR	(GOOD)=

				USR	(DEAD)=				; 15
				USR	(ACTIVE)=			; 16


UDSUB1			LDY	SCOLUMN
UDLOOP1			LDA	(SCREENL),Y
				STA	(DESTINL),Y
				INY
				CPY	DCOLUMN
				BNE	UDLOOP1
				RTS

BVALUER			LDA	#$00
				STA	WIGGLE_FLAG
				LDY	#status
				LDA	(CHARDL),Y
				TAX
				AND	#%00111111
				BNE	:SKIPA
				TXA
				BEQ	:SKIPA
				AND	#critical
				BNE	:SKIPA
				TXA
				AND	#rundown
:SKIPA			LDX	#$00
:LOOP1			CMP	DSTARTS,X
				BEQ	:SKIPB
				INX
				INX
				INX
				INX
				BNE	:LOOP1			;Always
:SKIPB			STX	STATHOLD
				LDY	#$00
:LOOP2			INX
				LDA	DSTARTS,X
				STA	NORMLEV,Y
				INY
				CPY	#$03
				BNE	:LOOP2
				LDA	#$00
				STA	COUNT
				LDA	NORMLEV+2
				BEQ	ISDEAD
				SEC
				SED
				LDA	(CHARDL),Y
				LDY	#damagelev+1
				SBC	(CHARDL),Y
				STA	SCRATCH
				INY
				LDA	(CHARDL),Y
				LDY	#damagelev
				SBC	(CHARDL),Y
				CLD
				BNE	NOTDEAD
				LDA	SCRATCH
				BEQ	ISDEAD
				INC	COUNT
				CMP	#$11
				BCC	ISDEAD
NOTDEAD			LDX	#2
				STX	COUNT
:LOOP3			LDA	PCENTS-2,X
				PHA
				LDY	#damagemax+1
				LDA	(CHARDL),Y
				TAX
				DEY
				LDA	(CHARDL),Y
				TAY
				PLA
				JSR	LESS_PERCENT
				STX	TEMP
				STY	TEMP+1
				LDY	#damagelev+1
				SEC
				SED
				LDA	(CHARDL),Y
				SBC	TEMP
				DEY
				LDA	(CHARDL),Y
				SBC	TEMP+1
				CLD
				BCS	ISDEAD
				INC	COUNT
				LDX	COUNT
				CPX	#4
				BNE	:LOOP3
ISDEAD			LDA	COUNT
				CMP	NORMLEV+2
				BCS	:SKIPC
				STA	NORMLEV+2
:SKIPC			LDX	NORMLEV+2
				LDA	NLEVEL,X
				STA	NORMLEV+2
				CMP	#$99
				BEQ	:EXIT
				INC	WIGGLE_FLAG
:EXIT			LDX	NORMLEV+0
				LDA	SPEEDS,X
				STA	OVERALL_SPEED
				RTS

STATHOLD		DB	0

SPEEDS			DB	1,2,3,4,5		;1,3,6,9,12
PCENTS			DB	$25,$75
NLEVEL			DB	$99,$87,$74
				DB	$61,$4F
*GOOD<=100%
*FAIR<=75%
*POOR<=25%
*CRIT<=5
*DEAD=0
NORMLEV			DB	$00,$00,$00

DSTARTS			DB	healthy,$74,$74,$04		;NORM.NORM.GOOD
				DB	dead,$99,$99,$00		;COLD.BDED.DEAD
				DB	poisoned,$61,$74,$03	;WARM.NORM.FAIR
				DB	bleeding,$87,$87,$02	;COOL.UNDR.POOR
				DB	radiated,$4F,$74,$03	;???????????????????
				DB	illA,$4F,$74,$03		;FEVR.NORM.FAIR
				DB	illB,$4F,$74,$03		;???????????????????
				DB	illC,$4F,$74,$03		;???????????????????
				DB	illD,$4F,$74,$03		;???????????????????
				DB	blind,$74,$74,$03		;NORM.NORM.FAIR
				DB	confused,$4F,$4F,$02	;FEVR.OVER.POOR
				DB	critical,$87,$87,$01	;COOL.UNDR.CRIT
				DB	rundown,$87,$74,$04		;COOL.NORM.GOOD

TREATMENTS		DB	$09,0			;poisoned
				DB	$04,1			;bleeding
				DB	$59,0			;radiated
				DB	$19,0			;illA (fungus)
				DB	$29,0			;illB (parasite)
				DB	$49,0			;illC (bacteria)
				DB	$39,0			;illD (virus)
				DB	$06,2			;blind
				DB	$07,3			;confused

TREAT_STRINGS	USR (AN_INFUSION_OF_)=
				USR (CAUTERIZING)=
				USR (SIGHT_RESTORING)=
				USR (BRAIN_EQUALIZING)=

LEVEL			DB	$91,$7E,$6B
				DB	$58,$4F
BEGINS			DB	$01,$09,$11
ENDS			DB	$08,$11,$19
TIMES5			DB	$00,$05,$0A
YCURSOR			DB	$00,$00,$00
TCURSOR			DB	$00,$00,$00

STATTER			LDX #$3B
				LDY #$02
				JSR MOVE_TO

				JSR CNAME_TO_TEXT
				JSR DRAW_TEXTBUF_RET

				JSR CPROF_TO_TEXT
				JSR DRAW_TEXTBUF_RET

				JSR CRACE_TO_TEXT
				JSR DRAW_TEXTBUF_RET

				JSR HEALTH_TO_TEXT_L
				JSR DRAW_TEXTBUF_RET

				JSR	ENERGY_TO_TEXT_L
				JSR DRAW_TEXTBUF_RET

				JSR	DUAL_STATUS

				LDA	MEDIC_CHAR
				JSR	SET_CHAR

				JSR CNAME_TO_TEXT
				JSR DRAW_TEXTBUF_RET
				JSR	ENERGY_TO_TEXT_L
				JSR DRAW_TEXTBUF_RET

				LDA	ITARGET_CHAR
				JMP	SET_CHAR

DUAL_STATUS		JSR	CSTATUS_TO_TEXT
				JSR DRAW_TEXTBUF_RET
				LDA	#TextLineEnd
				STA	TEXTBUF
				LDY	#status
				LDA	(CHARDL),Y
				STA	TEMP
				BEQ	:EXIT
				CMP	#dead
				BEQ	:EXIT
				AND	#%00111111
				BEQ	:SKIPA
				BIT	TEMP
				BVS	:SKIPC
				BPL	:EXIT
				BMI	:SKIPB			;Always
:SKIPA			BIT	TEMP
				BVC	:SKIPC
				BPL	:EXIT
:SKIPB			LDA	#rundown
:SKIPC			JSR	STATUS_TO_TEXT
:EXIT			JMP	DRAW_TEXTBUF_RET

THERMOMETER     DB  $03,$52,$03,$59
                HEX FEA2804060708D6040001C363663CD6BFDE92A956B3E8600
                HEX FDFDB90103078D030100
                DB	$FF

WAVES           DB  $09,$52,$08,$59
                HEX 8000508B000040FEA6002A8B00002A0089288A8120FE9200
                HEX 558B0054015400501540868050055088548A508A408A408A
                HEX 408A40C880202A8B009B2A86802A820A20842A822A862802
                HEX 288628022886280228862802288628022882200A2882200A
                HEX 2882200A28822802288220082082200820AD805500559704
                HEX 010550150001548280558615401586154015860550058605
                HEX 500586055005860550058401140184050184050182010586
                HEX 0186019C802A009389970A0402802802880A8A02FE970803
                HEX 8015008905888101FE980089FEAE
                DB	$FF

BODY           	DB  $12,$52,$06,$59
                HEX A440787C7C7E91827E95827C918278897082706060824040
                HEX 8240C6A060787F9D7B827D7D7B8D82736361898263897382
                HEX 7789826F5F823F827C847E867E887E8A788C7C8E78707C7E
                HEX 917C8978746C1C7C7E7FA9827F95827F91827F8D827F8982
                HEX 7F7F827F827F847F867F883F8A1F8C0F8E030F3F7F913F89
                HEX 1F2F37383F7FAD827F95827F91827F8D827F89827F7F827F
                HEX 827F847E867E887C8A788C708E40A0071F7F9D5F823F3F5F
                HEX 8D824F4707898247894F826F8982777B827D823F847F867F
                HEX 887F8A1F8C3F8E1FA4031F3F3F7F91827F95823F91821F89
                HEX 0F820F07078203038203C6
                DB	$FF

OHEART          DB  $00,$00,$1C,$0E
                HEX 80008D202028892A9100505455A92AB500051555A9008D02
                HEX 020A892A9100B5009D2097010700914054559900912AA100
                HEX 9101155599009D0297090700B500AD282A00A540558900A5
                HEX 2A8D00A501558900AD0A2A00B500B50040405089548D558D
                HEX 2AB50001010589158D558D00B500B500B5009D409508892A
                HEX A9009D0195
                DB	$FF

BHEART          DB  $00,$20,$1C,$0F
                HEX 8000A140405054545500912028282A9910105455AD008902
                HEX 020A2AA1009D01050515558900B50200A940505455009D20
                HEX 282A910091AF04010099A7060400A50197080A00B50200B1
                HEX 505500A9202A8900A597110600A997120800AD01155500B5
                HEX 0200B540009920899703061010548955A5009102020A892A
                HEX 9100AD01010500B900B900B12020108D5491559500A1028D
                HEX 0A0A
                DB	$FF
